
/*--------------------------------------TRIGGER PARA CREAR ASIENTOS ---------------------------------------------*/
CREATE OR REPLACE TRIGGER INSERTAR_AVION 
AFTER INSERT ON FLOTA
FOR EACH ROW 
DECLARE 
TAMANO_AVION FLOAT(30) := :NEW.FLO_ENVERGADURA_M;
BEGIN 
	IF (TAMANO_AVION > 0 AND TAMANO_AVION <30) THEN 
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE,FK_ASCL_FLOTA) VALUES (6,1, :NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (50,2,:NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (60,3,:NEW.FLO_ID);

	END IF;

	IF (TAMANO_AVION > 30 AND TAMANO_AVION <60) THEN 
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (12,1,:NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (70,2,:NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (100,3,:NEW.FLO_ID);
	END IF;

	IF (TAMANO_AVION > 60) THEN 
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (20,1,:NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (90,2,:NEW.FLO_ID);
		INSERT INTO ASI_CLA (ASCL_CANTIDAD,FK_ASCL_CLASE, FK_ASCL_FLOTA) VALUES (150,3, :NEW.FLO_ID);
	END IF;

END;


CREATE OR REPLACE TRIGGER LLENAR_ASIENTOS 
AFTER INSERT ON ASI_CLA
FOR EACH ROW 
DECLARE 
CANTAsien NUMBER(10):= :NEW.ASCL_CANTIDAD;
TIPOASIEN NUMBER(10):= :NEW.FK_ASCL_CLASE;
NUMASIEN NUMBER(10):=1;

BEGIN 
WHILE (CANTASIEN >0) 
LOOP 
CANTASIEN:= (CANTASIEN -1);

IF (TIPOASIEN = 1) THEN 
INSERT INTO ASIENTO (ASI_NUMERO,ASI_TIPO, FK_ASI_CLASE, FK_ASI_ESTATUS) VALUES (NUMASIEN,'A',:NEW.ASCL_ID,1);
END IF;

IF (TIPOASIEN = 2) THEN 
INSERT INTO ASIENTO (ASI_NUMERO,ASI_TIPO, FK_ASI_CLASE, FK_ASI_ESTATUS) VALUES (NUMASIEN,'B',:NEW.ASCL_ID,1);
END IF;

IF (TIPOASIEN = 3) THEN 
INSERT INTO ASIENTO (ASI_NUMERO,ASI_TIPO, FK_ASI_CLASE, FK_ASI_ESTATUS) VALUES (NUMASIEN,'C',:NEW.ASCL_ID,1);
END IF;

NUMASIEN := NUMASIEN + 1 ;
END LOOP;

END;


/*------CREAR VUELOS -----------------------*/

CREATE OR REPLACE TRIGGER CREAR_VUELO
AFTER INSERT ON RUTA
FOR EACH ROW 
DECLARE 
FECHA1 DATE := to_date('18-01-01', 'yy-mm-dd')+dbms_random.value(1,1000);
FECHA2 DATE := to_date('18-01-01', 'yy-mm-dd')+dbms_random.value(1,1000);
BEGIN 
/*dbms_output.put_line('(T_Crear_vuelo) La fecha de salida es '||FECHA1);
dbms_output.put_line('(T_Crear_vuelo) La fecha de llegada es '||FECHA2);*/

	INSERT INTO VUELO 
	(VUE_FECHA,VUE_HORA_SALIDA,VUE_HORA_LLEGADA,FK_VUE_VUELO,FK_VUE_FLOTA,FK_VUE_RUTA,FK_VUE_ESTATUS)
	VALUES (FECHAS(FECHA1, FECHAS.VALIDAR_FECHAS (FECHA1,FECHA2)),
	to_date('11:50','HH24:MI:SS'),to_date('11:50','HH24:MI:SS'),NULL,SELECCIONAR_FLOTA(:NEW.RUT_DISTANCIA),:NEW.RUT_ID,9);
END;


/*-----------------------------------CREAER HABITACIONES -------------------------*/
CREATE OR REPLACE TRIGGER INSERTAR_HABITACION 
AFTER INSERT ON HOT_LUGAR
FOR EACH ROW 
DECLARE 
RANDOM NUMBER(10):= DBMS_RANDOM.VALUE (50,200);
CANTIDAD_HAB NUMBER (10):= 1;
PERSONAS NUMBER(10);
DESCRIPCION NUMBER(2);
BEGIN 
	WHILE (CANTIDAD_HAB < RANDOM)
	LOOP
	PERSONAS:= DBMS_RANDOM.VALUE (1,10);
	DESCRIPCION:= DBMS_RANDOM.VALUE(1,5);
	IF (DESCRIPCION = 1) THEN 
		INSERT INTO HABITACION (HAB_NUMERO,FK_HAB_HOLU, HAB_DESCRIPCION, HAB_CAPACIDAD, HAB_PRECIOXDIA, FK_HAB_ESTATUS)
		VALUES (CANTIDAD_HAB,:NEW.HOLU_ID,'Habitación con sala de estar de 72m2. Aire acondicionada. Wifi',PERSONAS,MONTOS(DBMS_RANDOM.VALUE(1,50)* PERSONAS,'D'),1);	
	ELSIF (DESCRIPCION =2 ) THEN 
		INSERT INTO HABITACION (HAB_NUMERO,FK_HAB_HOLU, HAB_DESCRIPCION, HAB_CAPACIDAD, HAB_PRECIOXDIA, FK_HAB_ESTATUS)
		VALUES (CANTIDAD_HAB,:NEW.HOLU_ID,'Wifi. Calefacción. Cocina',PERSONAS,MONTOS(DBMS_RANDOM.VALUE(1,50)* PERSONAS,'D'),1);	
	ELSIF (DESCRIPCION = 3 ) THEN 
		INSERT INTO HABITACION (HAB_NUMERO,FK_HAB_HOLU, HAB_DESCRIPCION, HAB_CAPACIDAD, HAB_PRECIOXDIA, FK_HAB_ESTATUS)
		VALUES (CANTIDAD_HAB,:NEW.HOLU_ID,'Wifi. Baño con jacuzzi. Secador. ',PERSONAS,MONTOS(DBMS_RANDOM.VALUE(1,50)* PERSONAS,'D'),1);	
	ELSIF (DESCRIPCION = 4) THEN 
		INSERT INTO HABITACION (HAB_NUMERO,FK_HAB_HOLU, HAB_DESCRIPCION, HAB_CAPACIDAD, HAB_PRECIOXDIA, FK_HAB_ESTATUS)
		VALUES (CANTIDAD_HAB,:NEW.HOLU_ID,'Wifi. Aire acondicionado. Servicio de toallas. Incluye camas individuales',PERSONAS,MONTOS(DBMS_RANDOM.VALUE(1,50)* PERSONAS,'D'),1);	
	ELSIF (DESCRIPCION=5) THEN 
		INSERT INTO HABITACION (HAB_NUMERO,FK_HAB_HOLU, HAB_DESCRIPCION, HAB_CAPACIDAD, HAB_PRECIOXDIA, FK_HAB_ESTATUS)
		VALUES (CANTIDAD_HAB,:NEW.HOLU_ID,'WIFI, Plancha para ropa, terraza, parrillera',PERSONAS,MONTOS(DBMS_RANDOM.VALUE(1,50)* PERSONAS,'D'),1);
	END IF;	
 	CANTIDAD_HAB := CANTIDAD_HAB + 1;
	END LOOP;
END;

/*------MIL_USU---------------------*/

CREATE OR REPLACE TRIGGER CREAR_MILLAS
AFTER INSERT ON USUARIO
FOR EACH ROW 
DECLARE 
BEGIN
	INSERT INTO MIL_USU (MIUS_FECHA,MIUS_ACUMULADO,FK_MIUS_MILLA,FK_MIUS_USUARIO)
	VALUES ((SELECT (CURRENT_DATE) FROM dual),0,NULL,:NEW.USU_ID);
END;
